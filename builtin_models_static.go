// Code generated by go-bindata.
// sources:
// builtin_models/BVLC_AlexNet_Caffe.yml
// builtin_models/DeepLabv3_MobileNetv2_PASCAL_VOC.yml
// builtin_models/Faster_RCNN_ResNet50_COCO.yml
// builtin_models/Mask_RCNN_Inception_v2_COCO.yml
// builtin_models/SRGAN.yml
// builtin_models/SSD_MobileNet_v2_COCO.yml
// builtin_models/SSD_MobileNet_v2_Quantized_300x300_COCO.yml
// builtin_models/SSD_ResNet50_FPN_COCO.yml
// builtin_models/ssd_mobilenet_v1_coco.yml
// DO NOT EDIT!

package tensorflow

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlc_alexnet_caffeYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\xdf\x6f\xdb\x38\x12\x7e\xd7\x5f\x31\x80\x51\x24\xbd\xb3\x24\x4b\xb6\x13\x57\x07\x1c\xee\x9a\xfb\x09\xdc\xe5\xa1\xdb\xdd\x7d\x28\x0a\x63\x44\x8d\x2c\x36\x14\x29\x90\x23\x3b\xce\x5f\xbf\x20\x25\x59\x0e\xda\xc5\xe6\xc5\xa6\x66\xe6\x1b\x0e\x3f\x0e\x3f\x52\x63\x4b\x05\x7c\xfc\xe5\x7f\x0f\xfb\xbf\x2b\x7a\x7e\x24\xde\x3f\x60\x5d\x13\x2c\xc0\xbb\xc0\xd4\x70\x36\xbd\x85\xd6\x54\xa4\xa2\xda\x62\x4b\x27\x63\x9f\x8a\x08\x60\x80\x7e\x26\xed\x8c\xfd\x97\x32\x27\x58\xc0\xc5\x0f\xb5\xb1\xc0\x0d\x8d\x38\x80\x23\x59\x27\x8d\x2e\x20\x4b\xb2\x3c\x59\xbd\x8a\x1d\x7d\x20\x8c\x66\x8b\x52\x73\x74\x15\xed\x43\xa7\x00\xa9\x6b\x63\x5b\xe4\x61\x0c\x8e\x5a\xd4\x2c\xc5\xc5\x3f\x78\x23\x9f\x07\xa5\x26\x5b\xc0\x02\x2e\x1f\x0e\x7a\x47\x15\xb0\x81\x8e\xac\x8f\x1c\x6a\x83\xce\x52\x25\x85\xcf\x19\x01\x2c\xa0\xed\x15\xcb\x4e\x11\x74\x0a\xd9\x87\x39\x10\xa8\xa1\x24\x70\x1d\x09\x59\x4b\xaa\x22\x00\x6c\xab\xbb\x8d\x27\x01\xe0\xd0\xf5\x05\x58\x94\x9d\x35\xdf\x48\x70\x2a\xd0\xb6\x2a\xe6\x40\x4b\xad\xcc\xa9\x08\xb1\xb1\xe8\xfa\x10\x2e\xde\x16\x7e\x08\xe1\x5d\x27\xee\x36\x8a\x8a\xb7\x21\xc7\xe8\x11\xfb\x86\xca\xae\x01\x15\x39\x61\x65\xc7\x81\xf6\xbf\x46\x00\x9f\x1b\xe9\x46\x8a\xa4\x03\x04\x4b\x9d\x92\x62\x20\xdf\xd4\xf3\xe6\xc2\x80\x2c\xa9\xf2\x7b\xe2\xcd\x63\x23\x41\xd7\x97\x13\x22\x89\x00\xfe\x21\xeb\x9a\x2c\x69\x41\xae\x00\x6d\x18\xc2\x66\x4b\x7d\x80\x93\xe4\x26\x20\x2d\x29\x79\x68\xd8\xdb\x2a\x64\x8c\xb1\x3f\xb4\xa4\x39\xa4\xf8\x4b\x04\x20\xb5\x64\x89\x4a\xbe\xf8\x08\x6d\x74\xfc\x42\xd6\x40\x29\xd1\x91\xf3\x3b\xbb\x4a\x32\x90\xda\x31\x61\xe5\x6b\xcc\xe0\xb6\x36\xbd\xae\x40\x93\x20\xe7\xd0\x9e\x87\xbe\x1c\xe7\x5d\x02\xba\x39\xe5\xb0\x32\x36\x90\xc1\x01\x8f\x04\xb5\x42\x06\x65\x9c\x7b\x9f\x04\x36\x08\xca\x5e\x57\x8a\xaa\x99\x14\x5f\xb2\x64\xb2\x03\x74\x7d\xb7\x5a\xae\x56\x2b\x70\x1a\x3b\xd7\x18\x4e\x06\x10\x39\x86\x23\x2a\x59\xe1\xd8\x63\x63\xfb\xa1\x16\x04\x55\x6f\xfd\x52\x66\x26\x7c\x45\x73\xc6\xed\x2e\x64\x0c\xfc\xcc\x39\x00\x85\xe8\x2d\x8a\x73\x04\xb0\xbd\x4f\xf2\xed\xee\x1d\xa0\xae\x42\xb1\x90\x25\xbb\xf5\x87\xcd\x2e\xb9\xde\x3f\x53\xfa\x23\xe0\x37\x91\x4d\x17\x67\x17\xbc\x47\x67\x03\x16\x23\x08\xce\xed\xec\xdc\xad\x92\xfc\x1d\x98\x61\x4f\xaf\x66\x77\xc4\x4b\xe8\x9d\x2f\xf7\x5b\xef\x38\xb8\x05\x69\x26\x0b\xc2\x9a\xce\xb3\x75\xfb\x73\x70\x7b\x0f\x1e\xc9\xe2\x21\x08\x49\xb6\x0a\x01\x6e\x09\xb7\x1b\xf8\x33\x64\x23\xea\x3d\xfc\x09\x72\x68\xa5\xb5\xc6\x2e\xc1\x35\xa6\x57\xd5\x58\xb2\x3f\x69\x50\x4a\x86\x46\x1e\x1a\xb2\x97\xda\x92\xf7\xaf\x1b\xd4\xd3\x16\x38\xa4\x0a\xca\x33\xfc\xf3\x88\x1a\x7e\x6a\x48\x35\xd8\x92\x85\xbf\xb9\x69\x18\x59\x9a\x5b\x70\x01\xf3\x57\x90\x05\xec\xbc\x4a\xa4\x70\xa2\xd2\x49\x26\x3f\x24\x16\x49\x32\x75\xf8\xb4\xa4\x49\xd3\x62\x68\x98\x3b\x57\xa4\xe9\x41\x72\xd3\x97\x89\x30\x6d\xea\xa5\x34\x0d\x12\x9a\xb2\x25\x4a\x5b\x74\x4c\x36\x0d\x18\x97\x96\x47\x25\xf6\xa8\xe8\x59\x13\xbf\x21\xc3\x49\x3e\xc9\xf4\xff\x01\x1a\x4f\x6b\x8f\x8d\x8e\xff\xdb\xe2\x81\x1e\x89\xe3\x7c\x95\xe5\xf1\x11\xe7\x6a\x8a\x34\x1d\xd6\x91\x68\xd9\xb9\x44\x88\xe1\x33\xdd\xec\xf2\x4d\x2c\x3d\x4c\x13\xc7\x42\xa1\x73\xb2\x1e\x0f\x67\xec\xfb\x2b\xae\x88\xba\x58\x18\x7d\x34\xaa\xf7\x56\x54\xb1\xa6\xde\x86\x3f\xf6\x3a\xed\x92\xae\xaa\xa3\x05\x28\x29\x48\x3b\x7a\x25\x02\xd1\x68\x2c\xa0\xd7\x96\x1c\x5b\x29\x98\xaa\x68\x01\x52\x77\x3d\x07\x7a\xe7\xd8\xc1\x56\x04\xb9\xad\xa5\x75\x3c\x44\x01\x9f\x3b\xfa\xee\xe2\x88\x83\xb9\x80\x50\x7b\x90\xb5\x05\x5c\x69\xd5\x54\xc5\x55\x9e\x10\xf4\x4a\xce\xc2\x39\x0d\x53\xcc\x59\x3a\xf4\xf7\x0f\x93\x0d\x9d\x10\xa6\x9e\x4d\x21\x02\x80\x14\x79\xf9\xd9\x0f\x15\xd4\xca\x20\xaf\xf3\xd1\x17\xf2\xed\x15\x9e\xfd\x35\x73\xe3\xd5\xea\x66\xf4\x28\x3c\x9b\x9e\x0b\xb8\xf9\xcf\xaf\x0f\x93\x4d\x18\x65\xec\xde\xaf\xa9\x80\x9b\x8f\xff\xfe\x34\xd9\x2b\xd9\x92\xf6\x77\x97\x2b\xe0\xcb\x7a\x09\x79\x7e\x1f\x7e\xbe\x8e\xfe\x96\x50\x17\xf0\x25\xcb\xd7\x4b\xc8\xb2\xfb\x25\x64\xab\xcd\xd7\xc8\xf4\xdc\xf5\x3c\x10\xe8\xd7\x16\xaa\x1f\x89\x18\x7c\xfe\x34\x87\xa2\x5f\xef\x74\x40\xe0\x8f\xf8\x1b\x60\x33\x05\xd1\x0f\x28\x1c\x63\x14\x96\x61\x67\xfe\x98\xc1\xdf\xe7\xaf\xb3\xa6\xc4\x52\x2a\xc9\x92\xdc\x85\x45\x6f\x1d\x98\xa9\x09\xb9\xb7\xe4\xf6\xbd\x55\xc5\xd4\xd8\x6e\x9d\x60\x8b\x2f\x46\xe3\xc9\x85\x93\xe2\xd8\x58\x4a\xc2\xb5\x96\x18\x7b\x48\xdd\x59\x3b\x62\x97\x4e\x7d\x3e\x1a\x12\x7e\xe6\xd7\x59\x45\x43\xe2\xc9\xf5\x6d\x01\x9b\x2a\x5f\x6f\xca\xed\x6e\xbd\x46\x81\x9b\xcd\x87\x7c\xb7\xba\xdb\x62\xb6\x5b\x55\xe5\x7a\x95\xdd\x61\x14\xfa\xd0\x2f\x70\xba\xfe\x27\xcd\x39\x58\xec\x9a\xa0\x9d\x27\xf2\x97\x96\x03\x4b\xce\xf4\x56\x90\x5f\x7c\x89\x8e\xe6\xe2\xdd\x5b\xaa\x1f\x25\x62\xbe\x9f\x27\x4b\x04\xc3\x64\xfb\x0e\xb9\x29\xe0\x5a\x43\xf6\x59\xb2\x4a\x6b\x6b\x5e\x48\x87\xee\x52\x49\x57\x5e\xc2\xe7\x55\xde\x55\xf9\xba\xde\xac\xb2\x0f\x99\xc8\x2a\x81\xe2\x3e\xcb\x77\xdb\x7a\x93\xe1\x6e\x8b\x65\xb5\xf3\x27\x42\xba\x3d\x5a\xd1\xc8\xe3\xf8\xda\xa8\x51\x39\xff\x0a\x94\xf5\x20\xf8\xdc\xd0\x70\x13\x4c\x2b\x1b\x5e\x05\x7e\xc0\x06\x50\xc3\x88\x1e\x8f\xa8\x8f\x9c\x8b\xbe\xa6\x69\x30\x84\x74\x15\x69\xc3\xe4\xc7\x23\xaa\x96\x8a\xc2\xbb\xd2\x4d\x7d\xf9\x3d\xcb\x5e\xac\xc6\x87\xc6\x34\x25\x32\x5b\x59\xf6\x3c\xa8\x3a\x3d\xb3\x45\x18\x45\x0b\x66\x5f\x04\xf0\x24\x75\x55\xc0\xc3\xe3\xe3\x58\xa1\xff\xf6\x33\x0d\x42\x77\xc1\xdc\x3e\x3c\x3e\x2e\xe1\x93\xff\x49\x92\x70\xd7\x4c\x17\xf4\xde\x1f\x74\x47\x5c\xc0\x24\xc1\x5e\x8e\x06\xdb\xe5\x7d\x79\xfd\xc6\x88\x00\x5a\xd4\xb2\x26\xc7\x7b\xec\xb9\x31\xb6\x00\x2c\xab\x5e\x55\xd1\x6f\x01\x00\x00\xff\xff\x2f\xda\xc9\x7e\x7b\x0b\x00\x00"

func bvlc_alexnet_caffeYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlc_alexnet_caffeYml,
		"BVLC_AlexNet_Caffe.yml",
	)
}

func bvlc_alexnet_caffeYml() (*asset, error) {
	bytes, err := bvlc_alexnet_caffeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC_AlexNet_Caffe.yml", size: 2939, mode: os.FileMode(420), modTime: time.Unix(1553713404, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deeplabv3_mobilenetv2_pascal_vocYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x4b\x6b\xe4\x46\x10\xbe\xeb\x57\x14\xf8\xb0\x36\xd8\x7a\xcc\xcc\x7a\x3d\x3a\x04\xcc\x84\x40\xc0\x6b\x2f\x71\xb2\x87\x84\x20\x4a\xad\x92\xd4\xb1\xd4\x2d\xba\x4b\x33\xb6\x7f\x7d\xe8\xc7\x3c\x8c\x37\xe0\x53\x2e\x83\x7a\xea\xab\xea\xfa\xaa\xbe\x2a\x49\xe1\x48\x25\xfc\x4c\x34\xdd\x61\xbd\x5d\x56\x5f\x75\x2d\x07\xba\x27\xde\x2e\xaa\x6f\xb7\x8f\x9b\xdb\xbb\xea\xfb\xc3\x06\xce\xc0\x01\x41\xb7\xf0\xa2\x67\x03\xa3\x6e\x68\x48\x5a\x83\x23\xed\xb4\x79\x2a\x13\x80\x10\xe8\x77\x52\x56\x9b\x5f\x06\xbd\x83\x33\x38\xd8\xa1\xd5\x06\xb8\xa7\xe8\x07\xb0\x25\x63\xa5\x56\x25\x14\x69\xb1\x48\xf3\x37\xd8\x68\x03\xa1\x15\x1b\x94\x8a\x93\x13\xb4\x83\xee\x01\x52\xb5\xda\x8c\xc8\xe1\x19\x2c\x8d\xa8\x58\x8a\x83\x3d\x58\x13\x17\x07\xa5\x22\x53\xc2\x19\x1c\x0e\x16\x66\x4b\x0d\xb0\x86\x89\x8c\x43\x86\xdc\x80\xb6\x38\xcc\x3e\x66\x02\x80\x63\x73\xbd\x72\xe4\x00\xba\x69\x2e\xc1\xa0\x9c\x8c\xfe\x87\x04\x67\x02\xcd\x38\x5c\xb1\xa7\xdb\x0e\x7a\x57\x7a\xec\x95\x98\x66\x0f\x17\x1f\x83\x77\x1e\x3e\x4d\xe2\x7a\x35\x50\xf9\x31\xcf\x88\x8e\xbe\x1f\xc8\xec\xd4\xa1\x21\x2b\x8c\x9c\xd8\x97\xf3\xa7\x04\x4e\x1b\xf6\xb8\x2f\xe0\x23\x75\x23\x29\x0e\x95\xf5\x65\xb9\x84\x5d\x2f\x45\x0f\xd2\x82\xef\x09\x35\xa0\x95\xef\xe8\xe6\x61\xf3\x00\xe7\x1b\x3d\x8e\x5a\xc1\x43\xed\x32\xb0\xae\x1b\x1b\xad\x98\x9e\xf9\x02\x1a\x64\xb4\xc4\x69\x02\xf0\x87\x75\x0a\x70\xfa\x52\x5e\x5f\x42\x0b\x5d\x6d\xb5\xa8\x7c\x4c\x9c\xbb\xf3\x86\x68\x1a\xbc\x0e\x47\xb5\x5d\x54\x13\x5a\x81\x43\x30\x57\x38\x77\xd5\x22\x2f\x6e\xaa\xbc\xa8\x16\xeb\x0b\x68\x8d\x1e\x4f\xd3\x8f\x1a\x86\xaf\xbe\x8f\x7f\x6a\x9d\x26\x86\x5a\x32\xa4\x04\x59\xd7\xfb\xe3\xc9\xb7\x1d\x27\xa7\x82\x0c\x76\x54\x5b\xc9\xe4\x1e\x89\x45\x9a\x42\xa8\x51\x2d\x55\xf7\x46\xb3\x57\xd0\x33\x4f\xb6\xcc\xb2\x4e\x72\x3f\xd7\xa9\xd0\x63\x76\x2c\x73\xe6\x71\x36\x63\x43\x94\x8d\x68\x99\x4c\x66\xc8\x12\x1a\xd1\x67\x91\xd7\xc7\xa3\xd4\x83\xae\xff\x2b\x4a\xd6\x2d\x1b\x2d\x02\xb2\x7a\xd5\x3a\x1d\x9b\x64\x90\x82\x94\xa5\x12\x6e\x27\x14\x3d\xc1\x5d\x38\x5f\xc2\xf7\x38\x0c\x61\xca\x22\xcc\xcd\xf1\x91\x9a\x54\xd3\xcc\xbe\x42\x61\x04\xc2\xd9\xe7\xca\x2f\x13\x95\x20\x47\xec\xc8\xcd\xa8\x34\x96\x83\xd9\x41\x71\x90\xfc\xe2\x25\xf8\x46\x55\x2e\x70\xc0\xec\xfd\x4e\xcc\xfb\x9b\x4f\x42\xf9\x08\x13\xba\xf9\x67\x32\x36\x4c\x01\x00\x0d\xe4\x44\x58\x85\x14\x66\xa9\xf8\x26\x5a\xbc\x57\x35\xe0\x8b\x1b\xe9\x4f\xbf\xba\x4b\x82\x0c\x3e\x45\x40\x23\x47\x52\x8e\xb5\x2d\xe1\xaf\xe5\x25\x7c\x2e\x96\x7f\x27\x7a\xe6\x69\x66\x17\x3d\x44\xdc\xaf\x0b\x1b\xc4\x9e\xfc\x80\x45\x70\x39\x2e\x96\x08\x85\x33\xc0\x1f\x71\x8a\xf0\x03\x95\xe4\x3d\xad\xb7\xa4\xa4\xe2\xeb\x95\xff\x7f\x44\xfb\x64\x0f\x94\xf6\x83\xf8\xcd\x50\x23\x85\xbb\xc2\x06\x6a\x2d\x21\xcf\x86\x6c\x35\x9b\xa1\x3c\x08\xc9\x2e\x53\x1c\xf1\x55\x2b\xdc\x59\x2f\x27\xcb\xda\x50\xea\xf7\x40\xaa\x4d\x77\x50\xe6\x3b\x95\x7d\x7c\xdc\xb2\x60\xbb\xda\x6a\x71\x25\x06\xb4\x96\x6c\xca\xcf\xfc\x36\x2b\xd1\x93\x78\xb2\xf3\x58\xc2\x5a\xd0\x6a\xb9\xae\x45\x5b\xaf\x56\x62\x99\xaf\x68\xb5\xc6\xbc\xa5\x02\x69\xb9\xbe\x69\xaf\xd7\x89\x4f\xc0\x49\xce\x4e\x24\x64\x2b\xc9\x46\xf1\x75\x06\xa7\x1e\x50\x35\xb0\x23\xd9\xf5\x6c\xc1\xea\xd9\x08\x72\x7a\xac\xd1\x92\xa7\x9e\x40\xc0\x55\x13\x72\xff\x3f\x17\xa2\x35\xfa\x95\x54\x25\x55\x5c\x26\x95\xcf\x24\x9d\xdc\x70\x4b\x5b\xb9\x41\x95\xdb\xb8\xcb\x5b\x1c\xac\x1b\x00\xd9\x82\x25\xbe\x74\x2a\x09\x5b\x73\xcf\xc4\x2d\x54\x04\xf7\xc0\x1a\x50\x41\xf4\xf6\xce\x67\x1e\x79\xe4\x79\x5a\x94\xf0\x87\x0f\xd7\x90\xd2\x4c\xee\x39\x7a\xb5\x72\x20\xff\x36\xb6\x7b\x61\xbe\xaf\xe9\x4e\x72\x2f\x43\x2a\xc7\x2b\xc3\x55\xc7\x26\xd6\x39\x16\x4d\xbe\x5c\xe5\xc5\xcd\xba\xf9\x92\xe7\xcb\xc5\xba\xc8\x8b\x1c\xeb\x5a\x2c\x68\xf5\xe5\x73\x82\xcc\x46\xd6\x33\x87\xf5\x4a\xcf\x6c\x30\x76\xf1\x68\x49\x00\x9e\xa4\x6a\x4a\xd8\xdc\xdf\x47\x4a\xee\xec\x52\x53\x34\x1b\x1c\x40\x11\xfb\xf7\xfe\xf9\xe6\xfe\xfe\x12\x7e\x73\x3f\x69\x9a\x5e\xb8\x41\x75\xf5\x97\xaa\xab\xe2\x3b\xa4\x84\xf0\x45\x02\xee\x8b\x64\x91\x17\x0b\xb7\x5b\x82\xe9\xf0\x36\xf7\x5f\x1a\xd1\x2f\x71\x83\xa5\x64\x4b\x96\x2b\x9c\xb9\xd7\xa6\x84\x4d\x4f\xaa\x4b\xfe\x0d\x00\x00\xff\xff\xd0\x12\x09\x60\xf6\x08\x00\x00"

func deeplabv3_mobilenetv2_pascal_vocYmlBytes() ([]byte, error) {
	return bindataRead(
		_deeplabv3_mobilenetv2_pascal_vocYml,
		"DeepLabv3_MobileNetv2_PASCAL_VOC.yml",
	)
}

func deeplabv3_mobilenetv2_pascal_vocYml() (*asset, error) {
	bytes, err := deeplabv3_mobilenetv2_pascal_vocYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "DeepLabv3_MobileNetv2_PASCAL_VOC.yml", size: 2294, mode: os.FileMode(420), modTime: time.Unix(1553626255, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _faster_rcnn_resnet50_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6f\xe3\x38\x0c\xbd\xfb\x57\x10\xe8\x61\x66\x80\x8e\x9d\xef\xba\x3e\x2c\xb0\xc8\x62\x4e\x8b\x14\x28\x76\xf7\x2a\xc8\x32\x6d\x6b\x6b\x4b\x86\x48\x37\x69\x7f\xfd\x42\x92\xe3\x24\x68\x0f\x3d\xec\x25\x90\xc2\x47\xea\x91\x7c\x94\x6c\x64\x8f\x05\xfc\x92\xc4\xe8\xc4\xf3\xfe\x70\x10\xcf\x48\x07\xe4\xed\x42\xec\x9f\xf6\x4f\x70\x07\x1e\x01\xb6\x86\x37\x3b\x3a\xe8\x6d\x85\x5d\x52\x3b\xd9\xe3\xd1\xba\x97\x22\x01\x88\x11\xfe\x42\x43\xd6\xfd\xea\xec\x11\xee\x60\xb6\x43\x6d\x1d\x70\x8b\x93\x1f\xc0\x2b\x3a\xd2\xd6\x14\xb0\x4c\x97\xab\x74\x71\x83\x9d\x6c\xa0\xac\x61\x27\xb5\xe1\xe4\x0a\xed\xa1\x67\x80\x36\xb5\x75\xbd\xe4\xb8\x06\xc2\x5e\x1a\xd6\x6a\xb6\x47\x6b\xe2\xe3\x48\x6d\xd0\x15\x70\x07\xf3\x86\x60\x24\xac\x80\x2d\x0c\xe8\x3c\x32\x72\x03\x7c\x95\xdd\x18\x62\x26\x00\xb2\xaf\x76\x1b\x9f\x1c\x40\x33\x8c\x05\x38\xa9\x07\x67\xff\x45\xc5\x99\x92\xae\xef\x7e\x72\x48\xb7\xee\xec\xb1\x08\xd8\x9f\x6a\x18\x03\x5c\x7d\x0d\xde\x04\xf8\x30\xa8\xdd\xa6\xc3\xe2\x6b\x9e\x13\x7a\xf2\xfd\x02\xb3\x6b\x87\x0a\x49\x39\x3d\x70\x28\xe7\x6f\x09\x5c\x37\xec\xa9\xf4\xfe\xf0\x07\x32\xaa\x50\xd4\x50\x91\x7b\x38\xb6\x5a\xb5\xa0\x09\x42\x3b\xb0\x02\x6b\x42\x33\x83\x30\xbe\xef\x6d\xdf\x5b\x33\x39\x93\x6f\xc4\xde\x1a\xc6\x13\xff\x80\x4a\xb2\x24\xe4\x34\x01\xf8\x9b\x10\xea\xa8\x2e\xa7\x8c\x11\x0e\xc9\x04\x75\x29\xab\xac\x58\x2d\x96\xb9\x58\x2c\xc5\x2a\x87\xda\xd9\xfe\x9a\x54\x75\xcb\x06\xde\xad\x4d\x13\x87\x35\x3a\x34\x0a\xc9\xf7\xf4\xb2\x0b\xed\x94\x83\xef\x6e\x06\x47\x2c\x49\x33\xfa\x25\xb2\x4a\x53\x88\xb9\x97\xda\x34\x37\x5a\xfc\x09\x2d\xf3\x40\x45\x96\x35\x9a\xdb\xb1\x4c\x95\xed\xb3\x4b\xf9\xb2\x80\xa3\xac\xec\x6c\x99\xf5\x21\x85\xcc\x21\xa1\x74\xaa\xcd\x6c\xc8\x5a\xcc\x24\xb3\x66\x5d\x59\x95\xcd\x7b\x11\x9c\x85\x27\xdd\x57\x49\xa7\x15\x1a\xc2\x02\x7e\x1f\xa4\x6a\x11\xfe\x8c\xfb\x7b\xf8\x67\x52\x6c\x1c\x85\x09\xe6\x87\xed\xc2\x53\x9b\x61\xe4\x90\x6e\xac\x43\xdc\x07\xfa\xfc\x36\x60\x01\xba\x97\x0d\xfa\x41\xd2\x8e\x38\x9a\x3d\x54\x76\x9a\xdf\x82\x4e\x6e\x5a\xef\x03\x47\xcc\xd9\xef\xca\x7c\x3e\xf9\x2a\x54\x88\x30\x48\x3f\xa4\x8c\x8e\xa2\x54\x01\xb0\xc3\x1e\x0d\x8b\x48\x61\xd4\x86\xf3\xc9\x12\xbc\x44\x27\xdf\xfc\xdc\x7d\x0b\x87\x88\x58\xd4\x6f\x89\x1d\x79\x18\xd9\xc7\x88\x7e\xa5\x1d\x4d\xa5\x4d\x53\xda\x53\xf2\x09\xcf\x08\x9f\x51\x50\xda\x13\xdc\x81\xfc\x8c\xf1\x04\x9d\x89\x26\x1f\x49\xdf\x52\xae\x3b\x2b\x79\xbd\x0a\x96\xd2\x9e\x90\x66\xca\x97\x1e\x86\xff\xbf\xc5\x0a\x38\x5b\xca\x52\x77\x9a\xf5\xa7\x50\x52\xd6\x9d\xb1\xaa\x93\x44\x9f\xa2\x26\x4b\x84\xd5\x28\x79\x74\x48\x62\x74\x5d\x31\x4b\x91\xd6\xa9\xec\xe5\xbb\x35\xf2\x48\x41\x90\xc4\xd6\x61\x1a\x66\x3b\xb5\xae\x39\xab\xf2\xa3\x4e\x89\x2a\xd1\xdb\x52\x77\x68\x90\xc5\xeb\x72\x9e\xb0\x07\xb1\x5c\x8a\xe5\x43\xd6\xc9\x12\x3b\x4a\xf9\xc4\xb7\xe7\xab\x16\xd5\x0b\x8d\x7d\x01\x9b\xcd\x32\x57\xf9\xb6\x5a\x2c\x71\xa7\xf2\x55\x5d\xef\xf2\xcd\x63\x99\xaf\xd6\x8f\x0f\xdb\xc7\xcd\x3a\x4f\xc2\x51\x5e\x8b\x34\xa0\xd2\xb5\x46\x9a\x54\xd9\x38\x39\xb4\x20\x4d\x05\x47\xd4\x4d\xcb\x04\x64\x47\xa7\xd0\x0b\xb5\x94\x84\x21\xc9\x04\x22\x4e\x0c\x92\xdb\xff\x23\xe5\xaf\x5c\x2c\x59\xed\xec\x3b\x1a\xa1\xcd\x74\x59\x88\xc0\x21\x1d\xca\x04\x40\x93\xf0\xe3\xac\x5f\xa7\x3b\xb8\x96\x1d\xf9\x99\xd0\x35\x10\xf2\xbd\x97\x56\xbc\xf2\xce\x39\xf8\xdb\x50\x82\x5f\xb0\x05\x69\x60\xf2\x0e\xce\x77\x01\x79\xc9\xf0\xba\x1c\xf1\x8f\x10\xae\x42\x63\x19\xfd\x7a\xf2\xaa\x75\x87\xe1\x15\xa5\xb3\x9a\x3f\x56\xf3\xa8\xb9\xd5\x91\xca\xe5\xc8\x78\xd4\xa5\x7d\x79\xb9\xc3\x0a\xcb\xe5\x66\xbd\xdd\xed\xea\x7c\xbd\xc0\xf5\xf6\x61\xb7\xdd\xac\xf3\x72\xb3\x5d\xd5\x75\x22\x99\x9d\x2e\x47\x8e\xd7\x27\x9e\xd8\xc9\xa9\x7f\x17\x4b\x02\xf0\xa2\x4d\x55\xc0\xfe\x70\x98\x52\xf2\x7b\x4f\xcd\xe0\xe8\x64\x07\x06\x39\xbc\xd7\xdf\xf7\x87\xc3\x3d\x3c\xfb\x9f\x34\x4d\x7f\xf8\xa9\xf6\xef\x84\x36\x8d\x98\x1e\x80\x02\xa6\x6f\x88\x69\x3f\x3f\xbd\xe1\xb3\x60\x02\x27\x00\xbd\x34\xba\x46\x62\x21\x47\x6e\xad\x2b\x60\xdf\xa2\x69\x92\xff\x02\x00\x00\xff\xff\xfb\x15\x2a\xbf\x9c\x08\x00\x00"

func faster_rcnn_resnet50_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_faster_rcnn_resnet50_cocoYml,
		"Faster_RCNN_ResNet50_COCO.yml",
	)
}

func faster_rcnn_resnet50_cocoYml() (*asset, error) {
	bytes, err := faster_rcnn_resnet50_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Faster_RCNN_ResNet50_COCO.yml", size: 2204, mode: os.FileMode(420), modTime: time.Unix(1553626255, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mask_rcnn_inception_v2_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6f\xe3\x38\x0c\xbd\xfb\x57\x10\xe8\x61\x66\x80\x8e\x5d\xc7\x99\x36\xf5\x61\x81\x45\x80\x05\x06\xd8\xcd\x00\xb3\x1f\x57\x81\x96\x69\x5b\x5b\x5b\x32\x24\xba\x69\xfb\xeb\x17\xfa\x88\x93\xa2\x3d\xf4\xb0\x97\x40\x32\x1f\xa5\x47\xf2\x91\x8a\xc6\x89\x6a\xf8\x03\xdd\x83\xf8\xb9\x3f\x1c\xc4\x77\x2d\x69\x66\x65\xb4\x78\xdc\x88\xfd\x8f\xfd\x0f\xb8\x02\x8f\x01\xd3\xc1\xb3\x59\x2c\x4c\xa6\xa5\x31\xeb\x2c\x4e\x74\x34\xf6\xa1\xce\x00\xe2\x19\x7f\x91\x76\xc6\xfe\x36\x9a\x23\x5c\xc1\x6a\x87\xce\x58\xe0\x81\x92\x1f\xc0\x23\x59\xa7\x8c\xae\xa1\xcc\xcb\x4d\x7e\xf3\x0a\x9b\x6c\x20\x8d\x66\x8b\x4a\x73\x76\x81\xf6\xd0\x13\x40\xe9\xce\xd8\x09\x39\xae\xc1\xd1\x84\x9a\x95\x5c\xed\xd1\x9a\xf9\x73\x50\x69\xb2\x35\x5c\xc1\xba\x71\xb0\x38\x6a\x81\x0d\xcc\x64\x3d\x32\x72\x03\x7a\xc4\x71\x09\x67\x66\x00\x38\xb5\xb7\x5b\x1f\x1c\x40\x3f\x2f\x35\x58\x54\xb3\x35\xff\x92\xe4\x42\xa2\x9d\xc6\xaf\x1c\xc2\xed\x46\x73\xac\x03\xf6\xab\x9c\x97\x00\x97\x1f\x83\xf7\x01\x3e\xcf\xf2\x76\x3b\x52\xfd\x31\xcf\x84\x4e\xbe\x1f\x60\x76\xe9\xd0\x92\x93\x56\x85\xda\xd6\xf0\x4b\x06\x97\x05\xfb\xae\x1d\xa3\x96\x04\x7f\x52\x3f\x91\xe6\x98\xd9\x90\x96\x6b\x38\x0e\x4a\x0e\xa0\x1c\x84\x9a\x50\x0b\x46\x87\x8a\x06\x75\x7c\xde\x9b\x69\x32\x1a\x7e\x34\x9e\x81\xf3\xd5\xd8\x1b\xcd\xf4\xc4\x5f\xa0\x45\x46\x47\x9c\x67\x00\x7f\x3b\x82\xc9\x8b\xcc\x4a\xad\x85\xba\x14\x99\x34\xd2\x88\xcd\x4d\xb9\x13\x37\xa5\xd8\xec\xa0\xb3\x66\xba\xe4\xd6\x12\x93\x3c\xf3\x81\x17\x63\xf2\xcc\x52\x47\x96\xb4\x24\xe7\x4b\x7b\xde\x85\xaa\xe2\xec\x8b\x5c\xc0\x91\x1a\xa7\x98\xfc\x92\x58\xe6\x39\xc4\x14\x34\x4a\xf7\xaf\x24\xf9\x15\x06\xe6\xd9\xd5\x45\xd1\x2b\x1e\x96\x26\x97\x66\x2a\xce\x59\x2c\x02\xce\x15\xcd\x68\x9a\x62\x42\xc7\x64\x0b\x4b\x8e\xd0\xca\xa1\x30\x21\x6e\xb1\x92\x2c\xfa\xaa\x35\xb2\x58\xf7\x22\x38\x0b\x4f\x7a\x6a\xb3\x51\x49\xd2\x8e\x6a\xf8\x75\x46\x39\x10\xfc\x1e\xf7\xd7\xf0\x4f\x12\x6e\xec\x88\x04\xf3\x3d\x77\xe6\xa9\xf4\xbc\x70\x08\x37\xe6\x21\xee\x03\x7d\x7e\x9e\xa9\x06\x35\x61\x4f\xbe\x9f\x94\x75\x1c\xcd\x1e\x8a\xa3\xe2\xe7\x20\x97\x57\x0a\xf0\x07\x47\xcc\xc9\xef\xc2\x7c\xba\xf9\xe2\xa8\x70\xc2\x8c\xbe\x57\x99\xac\x8b\x8a\x05\xa0\x91\xbc\x60\x44\xa4\xb0\x28\xcd\xbb\x64\x09\x5e\x62\xc4\x67\xdf\x7e\x9f\xc2\x25\x22\x26\xf5\x53\x66\x16\x9e\x17\xf6\x67\x24\xea\x49\x7f\x2e\xca\x2f\x7b\x87\x6b\x74\x59\x91\x90\xa0\x70\x05\xf8\x1e\xf3\x04\x5f\x09\x67\x6f\xc9\xbf\xa6\xde\x8d\x06\xb9\xda\x04\x4b\x63\x9e\xc8\xad\xd4\xcf\xb5\x0c\xdf\x3f\xc5\x4c\x58\xd3\x60\xa3\x46\xc5\xea\x5d\xa8\x93\xc6\x9e\xb0\x72\x44\xe7\xde\x45\x25\x4b\x84\xf9\xfe\x78\x0f\x14\xbe\x47\x48\x47\xc8\x8b\x25\x27\x16\x3b\xd6\xab\x6a\x5d\x95\xe3\x84\x2f\x46\xe3\xd1\x05\xed\x3a\x36\x96\xf2\x30\x0d\x72\x63\xfb\x93\x80\xdf\x4a\xda\xb9\x56\x4c\xa6\x51\x23\x69\x62\xf1\x58\xae\xcd\x78\x27\xca\x52\x94\x77\xc5\x88\x0d\x8d\x2e\xe7\x27\x7e\x7d\xbf\x1c\x48\x3e\xb8\x65\xaa\x61\xbb\x2d\x77\x72\xf7\xad\xbd\x29\xe9\x56\xee\x36\x5d\x77\xbb\xdb\xde\x37\xbb\x4d\x75\x7f\xf7\xed\x7e\x5b\xed\xb2\x70\x95\x97\xad\x9b\x49\xaa\x4e\x91\x4b\x02\xee\x2d\xce\x03\xa0\x6e\xe1\x48\xaa\x1f\xd8\x81\x33\x8b\x95\xe4\x35\xdd\xa0\xa3\x10\x64\x06\x11\x27\x66\xe4\xe1\xff\x08\xf9\x63\x53\xa8\xe8\xac\x79\x21\x8f\x49\x93\x45\x04\x16\xf9\xdc\x64\x00\xca\x09\xdf\xfb\xea\x31\xcd\xed\x0e\x47\xe7\x1b\x48\x75\xe0\x88\xaf\xbd\xfe\xe2\x84\x3c\x45\xe1\x87\x27\x82\x5f\xb0\x01\xd4\x90\xbc\x83\xf3\x55\x40\x9e\x63\xbc\x4c\x48\xfc\x10\x8e\x6b\x49\x1b\x26\xbf\x4e\x5e\x9d\x1a\x29\xbc\xbc\xee\x24\xf9\xb7\xf9\x3c\x2a\x1e\x54\xa4\x72\xbe\x32\x5e\x75\x2e\x60\xb3\xbd\xa3\xed\xb6\x6a\xaa\xb2\xc2\xbb\x9b\x7b\xda\xca\xea\x5e\x96\x12\x09\xb1\x22\xd9\x54\x19\x32\x5b\xd5\x2c\x1c\x67\x2d\x3d\xb1\xc5\x54\xc1\xb3\x25\x03\x78\x50\xba\xad\x61\x7f\x38\xa4\x90\xfc\xde\x53\xd3\xb4\x58\x1c\x41\x13\x87\x37\xfe\xf3\xfe\x70\xb8\x86\x9f\xfe\x27\xcf\xf3\x2f\x7e\x04\xf8\x67\x45\xe9\x5e\xa4\xf7\xa2\x86\xf4\xbf\x23\xed\xd7\xe7\x3a\xfc\x95\x48\xe0\xcc\xf7\x8b\x56\x1d\x39\x16\xb8\xf0\x60\x6c\x0d\xfb\x81\x74\x9f\xfd\x17\x00\x00\xff\xff\x7f\x25\xd8\xbb\xd2\x08\x00\x00"

func mask_rcnn_inception_v2_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_mask_rcnn_inception_v2_cocoYml,
		"Mask_RCNN_Inception_v2_COCO.yml",
	)
}

func mask_rcnn_inception_v2_cocoYml() (*asset, error) {
	bytes, err := mask_rcnn_inception_v2_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Mask_RCNN_Inception_v2_COCO.yml", size: 2258, mode: os.FileMode(420), modTime: time.Unix(1553626255, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srganYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x90\xc3\xb6\x80\x23\xd9\x8e\x63\x27\x3a\x14\x58\xa4\x1f\x58\x74\xe1\xc3\x76\xbb\x97\x62\x21\x8c\xa8\x91\xc4\x46\x22\x09\x72\x18\x6f\xf2\xeb\x0b\x7e\xf8\x23\xd8\x3d\xa4\x17\x5b\xe4\xbc\xe1\xcc\x9b\xf7\x44\x29\x9c\xa9\x86\xbf\x3e\xfd\xf1\x7e\x0f\x57\x10\x56\xa0\x7b\x78\xd6\xde\xc2\xac\x3b\x9a\x8a\xde\xe2\x4c\x07\x6d\x1f\xeb\x02\x20\xa1\x3f\x93\x72\xda\xfe\x3e\xe9\x03\x5c\xc1\x29\x0e\xbd\xb6\xc0\x23\xe5\x3c\x80\x27\xb2\x4e\x6a\x55\xc3\xaa\x5c\xad\xcb\xe5\x2b\x6c\x8e\x81\xd0\x8a\x2d\x4a\xc5\xc5\x05\x3a\x40\x8f\x00\xa9\x7a\x6d\x67\xe4\xf4\x0c\x8e\x66\x54\x2c\xc5\x29\x9e\xa2\x45\x38\x07\xa5\x22\x5b\xc3\x15\x9c\x16\x0e\xbc\xa3\x0e\x58\x83\x21\x1b\x90\xa9\x37\xa0\x27\x9c\x7c\x3c\xb3\x00\xc0\xb9\xdb\x6e\x02\x39\x80\xc1\xf8\x1a\x2c\x4a\x63\xf5\xbf\x24\xb8\x12\x68\xe7\xe9\x9a\x23\xdd\x7e\xd2\x87\x3a\x62\xaf\x85\xf1\x11\x2e\xde\x06\x1f\x22\xdc\x18\xb1\xdd\x4c\x54\xbf\x2d\x33\xa3\x73\xee\x1b\x3a\xbb\x4c\xe8\xc8\x09\x2b\x0d\xc7\x71\xfe\x52\xc0\xa5\x60\x1f\x66\x1c\x08\x7e\x53\x23\x2a\x41\x33\x29\x4e\x23\x59\xc0\x61\x94\x62\x04\xe9\x20\xea\x41\x1d\x68\x05\xbf\x7e\xf8\xb2\xfe\x13\xae\xa1\x95\xc2\xb7\x52\x40\xa7\x0f\xca\x09\x9c\xa4\x1a\xe0\xdb\x06\x84\x9e\x0d\xb1\x0c\x75\xca\x02\xe0\x6f\x47\xd9\x48\x96\x26\x42\x47\xb0\x2a\x83\xee\xbd\xd5\x73\x6e\xe1\x23\x3e\x93\x3d\x81\x8c\x2e\x0b\x4b\x3d\x59\x52\x82\x5c\x50\xee\xbc\x8a\xa2\xa1\x09\x1a\x56\x70\xa0\xd6\x49\xa6\xf0\x48\x2c\xca\x12\x12\xc3\x36\xf4\x71\xe9\xb8\x6b\x18\x99\x8d\xab\xab\x6a\x90\x3c\xfa\xb6\x14\x7a\xae\xd2\x90\xa6\x50\xb9\x72\x76\x40\xf5\x66\x60\x95\x79\xb8\x2a\x10\x9f\x34\x76\x55\x64\x54\x0d\x4d\x8c\x97\xca\xbc\x14\x93\x14\xa4\x1c\xd5\xf0\xde\xa0\x18\x09\x3e\xa6\xf5\x02\xbe\x64\x87\x26\xeb\x67\x58\x78\xb9\xce\x1d\x4b\x65\x3c\x47\xe2\xc9\x97\x69\x1d\xfb\xe3\x67\x43\x35\xc8\xa8\xd6\x15\xf4\xd2\x3a\x4e\xe1\x00\xc5\x49\xf2\x73\xf4\xc5\x2b\xa9\xc3\xc1\x09\x73\xcc\xbb\x08\x1f\x2b\x5f\x1c\x15\x4f\x30\x18\x5e\x4a\x26\xeb\x92\x35\x01\x68\x8a\xc6\x68\x52\x0b\x5e\x2a\xbe\xcb\x91\x98\xd5\xc4\x09\xd5\xf0\x2e\xad\x62\xa9\x77\x19\x30\x13\xaa\x1a\xfe\x59\xad\x77\xe5\xed\x02\x2e\xff\xbe\x66\x44\xb0\x0f\xd5\x69\xaf\xd0\x9e\x8d\xe7\x50\xf7\x82\x6e\xf1\x03\x56\x09\x78\xa2\x85\x3f\x22\x96\x31\x27\x3e\xc5\xf7\xdc\x5e\x33\x93\x8a\xb7\x9b\xb8\x3f\xa3\x7b\x74\x27\x5e\xd1\x9e\xcd\x50\x69\xcf\xd5\x67\x54\x63\x22\xd7\xc9\x99\x54\x10\xd4\x05\x82\x0b\xb8\x59\xc0\xea\xe6\x76\xbb\x80\xf5\x72\xb3\xfc\x5a\x44\x01\x83\x92\xce\x90\x90\xbd\x24\x97\x35\x1d\x2c\x9a\x11\x50\x75\x70\x20\x39\x8c\xec\xc0\x69\x6f\x05\x05\x99\x5b\x74\xd4\x78\x3b\x85\xee\x22\xae\x31\xc8\x63\x7d\x32\xa7\xbb\x29\x71\xc6\x17\xad\xf0\xe0\xa2\x45\x1d\x6b\x4b\x65\x7c\xf9\x4b\x6d\x87\x2a\x96\x70\xd5\xf9\x1e\x38\xee\x44\x7f\x36\xab\x72\x5d\xf5\x56\xbf\x90\x6a\xe2\x7e\x69\xda\x02\x40\xba\x06\xad\x18\xe5\x53\xbe\x8c\x7a\x9c\x5c\x98\xaa\xec\xc1\x11\x2f\xc2\x30\x55\x9c\xe8\xb1\xbd\x70\x2b\x20\x84\x07\xd6\x80\x0a\x72\x76\x4c\xbe\x8a\xc8\x73\xf3\x97\x4c\xd3\x46\x3c\xae\x23\xa5\x99\xc2\x73\xce\xea\xe5\x44\xf1\x73\xe2\x8e\xfa\x7d\x3f\xa8\x83\xe4\x51\xa6\x56\xce\x25\x53\x29\x31\x92\x78\x74\x7e\xae\x61\x83\xfd\xcd\x0e\xb7\xf7\xbb\xdb\xae\xbd\xbd\x5f\xb5\x7d\xb7\x12\xbb\xbb\x25\xb5\x77\xcb\xd5\x7d\x7f\xbf\x2b\x90\xd9\xca\xd6\x73\xba\x61\xe8\x1b\x5b\xcc\xd2\x9c\x23\x05\xc0\xa3\x54\x5d\x0d\x0f\xfb\x7d\xa6\x14\xd6\xa1\x35\x45\xde\xe2\x04\x8a\x38\x7e\xb8\x7e\x7a\xd8\xef\x17\xf0\x29\xfc\x94\x65\xf9\x73\xb0\x6e\xb8\x2f\xa5\x1a\x9a\x0e\x19\x1d\x71\xfd\x3f\xae\xcd\xf0\x8a\xa6\xac\xd3\x97\x2a\x7e\x45\xf3\x91\x45\xb0\xa6\x92\x3d\x39\x6e\xd0\xf3\xa8\x6d\x0d\x0f\x23\xa9\xa1\xf8\x2f\x00\x00\xff\xff\x02\x6a\x3c\xa3\xb7\x07\x00\x00"

func srganYmlBytes() ([]byte, error) {
	return bindataRead(
		_srganYml,
		"SRGAN.yml",
	)
}

func srganYml() (*asset, error) {
	bytes, err := srganYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SRGAN.yml", size: 1975, mode: os.FileMode(420), modTime: time.Unix(1553626255, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ssd_mobilenet_v2_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xc1\x6f\xeb\xb6\x0f\xbe\xfb\xaf\x20\xd0\x43\xdf\x03\x5a\x3b\x4e\xd2\x34\xf1\xe1\x07\xfc\x90\x87\x9d\xb6\x16\xd8\xdb\x76\x15\x64\x99\xb6\xb5\xda\xa2\x21\xd1\x4d\xda\xbf\x7e\x90\xe4\x38\xc9\xda\x43\x2f\xbb\x04\x52\xf8\x51\xfa\x48\x7e\xa4\x6c\x64\x8f\x05\xfc\xfc\xf9\x43\xfc\x46\xa5\xee\xf0\x09\x59\xbc\x2e\xc5\xfe\x79\xff\x0c\x37\xe0\xad\x40\x35\xbc\xd1\x68\xa1\xa7\x0a\xbb\xa4\xb6\xb2\xc7\x03\xd9\x97\x22\x01\x88\xde\x7f\xa0\x71\x64\x7f\xe9\xe8\x00\x37\x30\xdb\xa1\x26\x0b\xdc\xe2\xe4\x07\xf0\x8a\xd6\x69\x32\x05\xe4\x69\xbe\x4c\x17\x57\xd8\xc9\x06\x8a\x0c\x5b\xa9\x0d\x27\x17\x68\x0f\x3d\x01\xb4\xa9\xc9\xf6\x92\xe3\x1a\x1c\xf6\xd2\xb0\x56\xb3\x3d\x5a\x13\x7f\x8e\xd4\x06\x6d\x01\x37\x30\x6f\x1c\x8c\x0e\x2b\x60\x82\x01\xad\x47\x46\x6e\x80\xaf\xb2\x1b\xc3\x99\x09\x80\xec\xab\xcd\xda\x07\x07\xd0\x0c\x63\x01\x56\xea\xc1\xd2\xdf\xa8\x38\x53\xd2\xf6\xdd\x3d\x87\x70\xeb\x8e\x0e\x45\xc0\xde\xab\x61\x0c\x70\xf5\x35\x78\x13\xe0\xc3\xa0\x36\xeb\x0e\x8b\xaf\x79\x4e\xe8\xc9\xf7\x0b\xcc\x2e\x1d\x2a\x74\xca\xea\x81\x43\x3a\xff\x97\xc0\x65\xc1\x9e\x4b\xef\x0f\x3f\x90\x51\x85\xa4\x86\x8c\xdc\xc1\xa1\xd5\xaa\x05\xed\x20\x94\x03\x2b\x20\x13\x8a\x19\x84\xf1\x6d\x4f\x7d\x4f\x66\x72\x76\xbe\x10\x7b\x32\x8c\x47\xfe\x0e\x95\x64\xe9\x90\xd3\x04\xe0\x4f\x87\xe0\x5c\x25\xfa\xa0\x2c\x13\x95\xa5\x48\x91\x58\x2e\xf2\xad\x58\xac\xc4\x72\x07\xb5\xa5\xfe\x92\x50\x75\xcd\x04\xde\x89\xd2\xc4\x62\x8d\x16\x8d\x42\xe7\xeb\x79\xde\x85\x52\xca\xc1\x57\x36\x83\x03\x96\x4e\x33\xfa\x25\xb2\x4a\x53\x88\x71\x97\xda\x34\x57\x3a\xbc\x87\x96\x79\x70\x45\x96\x35\x9a\xdb\xb1\x4c\x15\xf5\xd9\x39\x75\x59\xc0\xb9\xac\xec\xa8\xcc\x7a\xe9\x18\x6d\x66\xd1\xa1\xb4\xaa\xcd\x28\x44\x2c\x66\x92\x59\xb3\xaa\x48\x65\xf3\x5e\x04\x67\xe1\x49\xf7\x55\xd2\x69\x85\xc6\x61\x01\xff\x1f\xa4\x6a\x11\x7e\x8d\xfb\x3b\xf8\x6b\x52\x6b\x6c\x83\x09\xe6\x1b\xed\xcc\x53\x9b\x61\xe4\x10\x6e\xcc\x43\xdc\x07\xfa\xfc\x36\x60\x01\xba\x97\x0d\xfa\x26\xd2\xd6\x71\x34\x7b\xa8\xec\x34\xbf\x05\x8d\x5c\x95\xdd\x1f\x1c\x31\x27\xbf\x0b\xf3\xe9\xe6\x8b\xa3\xc2\x09\x83\xf4\x0d\xca\x68\x5d\x94\x29\x00\x76\xd8\xa3\x61\x11\x29\x8c\xda\xf0\x76\xb2\x04\x2f\xd1\xc9\x37\xdf\x73\xb7\xe1\x12\x11\x93\x7a\x9b\xd0\xc8\xc3\xc8\xfe\x8c\xe8\x57\xd2\x68\x2a\x6d\x9a\x92\x8e\xc9\x27\x3c\x23\x7c\x46\x41\x49\x47\xb8\x01\xf9\x19\xe3\x09\x3a\x13\x4d\x3e\x92\xbe\xa6\x5c\x77\x24\x79\xb5\x0c\x96\x92\x8e\xe8\x66\xca\xe7\x1a\x86\xff\x6f\x63\x06\x2c\x95\xb2\xd4\x9d\x66\xfd\x29\xd4\x29\xb2\x27\xac\xea\xa4\x73\x9f\xa2\x26\x4b\x84\xd5\x28\x79\xb4\xe8\xc4\x68\xbb\x62\x96\xa2\x5b\xa5\xb2\x97\xef\x64\xe4\xc1\x05\x41\x3a\x26\x8b\x69\xe8\xeb\x94\x6c\x73\x52\xe5\x47\x9d\xfe\xab\xc3\xf2\xb9\xc3\x1e\x45\x9e\x8b\xfc\x31\xeb\x64\x89\x9d\x4b\xf9\xc8\xd7\xf7\xab\x16\xd5\x8b\x1b\xfb\x02\xd6\xeb\x7c\xab\xb6\x0f\xd5\x22\xc7\x8d\xda\x2e\xeb\x7a\xb3\x5d\xef\xca\xed\x72\xb5\x7b\x7c\xd8\xad\x57\xdb\x24\x5c\xe5\xb5\xe8\x06\x54\xba\xd6\xe8\x26\x55\x36\x56\x0e\x2d\x48\x53\xc1\x01\x75\xd3\xb2\x03\x47\xa3\x55\xe8\x85\x5a\x4a\x87\x21\xc8\x04\x22\x4e\x0c\x92\xdb\xff\x20\xe4\x0f\x43\x25\xab\x2d\xbd\xa3\x11\xda\x4c\x83\x42\x84\xfb\xd3\xa1\x4c\x00\xb4\x13\xbe\x95\xf5\xeb\x34\x7b\x6b\xd9\x39\xdf\x0f\xba\x06\x87\x7c\xe7\x65\x15\x47\xdd\x89\xbf\x9f\x82\x12\xfc\x82\x09\xa4\x81\xc9\x3b\x38\xdf\x04\xe4\x39\xba\xcb\x54\xc4\x3f\xc2\x71\x15\x1a\x62\xf4\xeb\xc9\xab\xd6\x1d\x86\xd7\xd3\x9d\x94\xfc\x31\x93\x07\xcd\xad\x8e\x54\xce\x57\xc6\xab\xce\xa5\x5b\xe5\x8b\xba\xac\x96\xcb\xcd\x2e\x2f\x77\xdb\xb5\x7a\x5c\xec\xea\x65\x55\xd6\x9b\x87\x87\x55\xfd\xb0\xc5\x44\x32\x5b\x5d\x8e\x1c\x47\x27\x1e\xd9\xca\xa9\x76\x67\x4b\x02\xf0\xa2\x4d\x55\xc0\xfe\xe9\x69\x0a\xc9\xef\x3d\x35\x83\xa3\x95\x1d\x18\xe4\xf0\x4e\x7f\xdb\x3f\x3d\xdd\xc1\xef\xfe\x27\x4d\xd3\xef\xbe\xa3\xfd\xfb\xa0\x4d\x23\xa6\xc1\x5f\xc0\xf4\xed\x30\xed\xe7\x27\x37\x7c\x0e\x4c\xe0\x04\xa0\x97\x46\xd7\xe8\x58\xc8\x91\x5b\xb2\x05\xec\x5b\x34\x4d\xf2\x4f\x00\x00\x00\xff\xff\x60\xdf\x38\xfa\x90\x08\x00\x00"

func ssd_mobilenet_v2_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_ssd_mobilenet_v2_cocoYml,
		"SSD_MobileNet_v2_COCO.yml",
	)
}

func ssd_mobilenet_v2_cocoYml() (*asset, error) {
	bytes, err := ssd_mobilenet_v2_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SSD_MobileNet_v2_COCO.yml", size: 2192, mode: os.FileMode(420), modTime: time.Unix(1553626255, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ssd_mobilenet_v2_quantized_300x300_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x90\x43\x76\x81\x44\x1f\xfe\x48\x14\x1d\x0a\x14\x5e\xf4\xd4\x26\x68\xb7\xed\x95\xa0\xa8\x91\xc4\x86\x22\x55\x72\x14\x3b\xf9\xf5\x05\x49\x59\xb6\x9b\x1c\x72\xd9\x8b\x41\x7a\xde\x0c\xdf\xcc\xbc\x21\xa5\xf9\x80\x15\x7c\xff\xfe\x8d\xfd\x66\x6a\xa9\xf0\x11\x89\xbd\xac\xd8\xef\x13\xd7\x24\xdf\xb0\x61\xeb\x3c\x3f\xac\xf3\x9c\xed\x9e\x76\x4f\x70\x05\x1e\x0f\xa6\x85\x57\x33\x59\x18\x4c\x83\x2a\x69\x2d\x1f\x70\x6f\xec\x73\x95\x00\xc4\x78\x7f\xa2\x76\xc6\xfe\xa2\xcc\x1e\xae\x60\xb1\x43\x6b\x2c\x50\x8f\xb3\x1f\xc0\x0b\x5a\x27\x8d\xae\xa0\x48\x8b\x55\x9a\x5f\x60\x67\x1b\x08\xa3\xc9\x72\xa9\x29\x39\x43\x7b\xe8\x11\x20\x75\x6b\xec\xc0\x29\xae\xc1\xe1\xe0\xa9\x8b\xc5\x1e\xad\x89\x8f\xc3\xa5\x46\x5b\xc1\x15\x2c\x1b\x07\x93\xc3\x06\xc8\xc0\x88\xd6\x23\x23\x37\xc0\x17\xae\xa6\x10\x33\x01\xe0\x43\x73\xb7\xf1\xc9\x01\x74\xe3\x54\x81\xe5\x72\xb4\xe6\x1f\x14\x94\x09\x6e\x07\x75\x4b\x21\xdd\x56\x99\x7d\x15\xb0\xb7\x62\x9c\x02\x5c\x7c\x0e\xde\x05\xf8\x38\x8a\xbb\x8d\xc2\xea\x73\x9e\x33\x7a\xf6\xfd\x04\xb3\x73\x87\x06\x9d\xb0\x72\xa4\x50\xce\x9f\x12\x38\x6f\xd8\x53\xed\xfd\xe1\x1b\x12\x8a\x50\xd4\x50\x91\x1b\xd8\xf7\x52\xf4\x20\x1d\x84\x76\x60\x03\x46\x87\x66\x06\x61\x7c\xd9\x99\x61\x30\x7a\x76\x76\xbe\x11\x3b\xa3\x09\x0f\xf4\x15\x1a\x4e\xdc\x21\xa5\x09\xc0\x5f\x0e\xc1\xb9\x86\x0d\x41\x6b\x3a\x6a\xed\xdf\x77\x5a\x13\x46\x18\xb6\xca\x8b\x07\x96\x17\x2c\x5f\x43\x6b\xcd\x70\x4e\xb1\xb9\xe4\x06\x6f\xc6\xa4\x89\xc5\x16\x2d\x6a\x81\xce\x77\xf8\xb4\x0b\xcd\xe5\xa3\xef\x75\x06\x7b\xac\x9d\x24\xf4\x4b\x24\x91\xa6\x10\x2b\x51\x4b\xdd\x5d\x28\xf3\x16\x7a\xa2\xd1\x55\x59\xd6\x49\xea\xa7\x3a\x15\x66\xc8\x4e\xc5\xcc\x02\xce\x65\xb5\x32\x75\x36\x70\x47\x68\x33\x8b\x0e\xb9\x15\x7d\x66\x42\x0d\xd8\x42\x32\xeb\xd6\x8d\x11\xd9\xb2\x67\xc1\x99\x79\xd2\x43\x93\x28\x29\x50\x3b\xac\xe0\xe7\x91\x8b\x1e\xe1\xd7\xb8\xbf\x81\xbf\x67\xfd\xc6\xc1\x98\x61\x7e\xf4\x4e\x3c\xa5\x1e\x27\x0a\xe9\xc6\x3a\xc4\x7d\xa0\x4f\xaf\x23\x56\x20\x07\xde\xa1\x1f\x2b\x69\x1d\x45\xb3\x87\x72\x25\xe9\x35\xa8\xe6\x42\x08\x3e\x70\xc4\x1c\xfd\xce\xcc\xc7\x93\xcf\x42\x85\x08\x23\xf7\x23\x4b\x68\x5d\x14\x2e\x00\x2a\x1c\x50\x13\x8b\x14\x26\xa9\xa9\x9c\x2d\xc1\x8b\x29\xfe\xea\xa7\xf0\x3a\x1c\xc2\x62\x51\xaf\x13\x33\xd1\x38\x91\x8f\x11\xfd\x6a\x33\xe9\x46\xea\xae\x36\x87\xe4\x03\x9e\x11\xbe\xa0\xa0\x36\x07\xb8\x02\xfe\x11\xe3\x19\xba\x10\x4d\xde\x93\xbe\xa4\xdc\x2a\xc3\x69\xbd\x0a\x96\xda\x1c\xd0\x2d\x94\x4f\x3d\x0c\xff\x5f\xc7\x0a\x58\x53\xf3\x5a\x2a\x49\xf2\x43\xa8\x13\xc6\x1e\xb1\x42\x71\xe7\x3e\x44\xcd\x96\x08\x6b\x91\xd3\x64\xd1\xb1\xc9\xaa\x6a\x91\xa2\x5b\xa7\x7c\xe0\x6f\x46\xf3\xbd\x0b\x82\x74\x64\x2c\xa6\x61\xd2\x53\x63\xbb\xa3\x2a\xdf\xeb\xf4\x7f\x33\x57\x2c\x13\x76\xcf\x8a\x82\x15\xf7\x99\xe2\x35\x2a\x97\xd2\x81\x2e\xcf\x17\x3d\x8a\x67\x37\x0d\x15\x6c\x36\x45\x29\xca\x6d\x93\x17\x78\x27\xca\x55\xdb\xde\x95\x9b\x87\xba\x5c\xad\x1f\xee\xb7\x0f\x9b\x75\x99\x84\xa3\xbc\x16\xdd\x88\x42\xb6\x12\xdd\xac\xca\xce\xf2\xb1\x07\xae\x1b\xd8\xa3\xec\x7a\x72\xe0\xcc\x64\x05\x7a\xa1\xd6\xdc\x61\x48\x32\x81\x88\x63\x23\xa7\xfe\x07\xa4\xfc\x89\x6b\x26\xa3\x56\x49\x42\x16\x78\xa4\x63\x9d\x00\x48\xc7\xfc\x48\xcb\x97\xf9\x56\x6e\xb9\x72\x7e\x2e\x64\x0b\x0e\xe9\xc6\xcb\x2b\x5e\x82\xc7\x3c\xfc\xfd\xc8\xc1\x2f\xc8\x00\xd7\x30\x7b\x07\xe7\xab\x80\x3c\x65\x79\x5e\x92\xf8\x47\x08\xd7\xa0\x36\x84\x7e\x3d\x7b\xb5\x52\x61\x78\x57\xdd\x51\xd1\xef\x2b\xba\x97\xd4\xcb\x48\xe5\x74\x64\x3c\xea\xd4\xc2\xbc\xdc\x94\xe5\x66\x83\xed\x96\xb7\xb5\xd8\xae\x57\x65\x83\x58\xb7\x75\x51\x36\xdb\x72\x9b\x3f\x24\x9c\xc8\xca\x7a\xa2\x78\x85\xe2\x81\x2c\x9f\x7b\x78\xb2\x24\x00\xcf\x52\x37\x15\xec\x1e\x1f\xe7\x94\xfc\xde\x53\xd3\x38\x59\xae\x40\x23\x85\x17\xfc\xcb\xee\xf1\xf1\x06\xfe\xf0\x3f\x69\x9a\x7e\xf5\x93\xed\x5f\x0e\xa9\x3b\x36\x3f\x09\x15\xcc\x5f\x15\xf3\x7e\x79\x8c\xc3\x87\xc2\x0c\x4e\x00\x06\xae\x65\x8b\x8e\x18\x9f\xa8\x37\xb6\x82\x5d\x8f\xba\x4b\x7a\xd9\x34\xe8\xef\x03\x3b\x61\xf2\x5f\x00\x00\x00\xff\xff\x50\xeb\xb6\xa0\xc9\x08\x00\x00"

func ssd_mobilenet_v2_quantized_300x300_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_ssd_mobilenet_v2_quantized_300x300_cocoYml,
		"SSD_MobileNet_v2_Quantized_300x300_COCO.yml",
	)
}

func ssd_mobilenet_v2_quantized_300x300_cocoYml() (*asset, error) {
	bytes, err := ssd_mobilenet_v2_quantized_300x300_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SSD_MobileNet_v2_Quantized_300x300_COCO.yml", size: 2249, mode: os.FileMode(420), modTime: time.Unix(1553626255, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ssd_resnet50_fpn_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x3d\x6f\xe3\x38\x10\xed\xf5\x2b\x06\x48\x91\x5d\x20\x91\xfc\x21\x3b\x8e\x8a\x03\x0e\x5e\x6c\x75\x70\x0e\xbb\x77\xd7\x12\x14\x35\x92\x78\x91\x48\x81\x33\x8a\x9d\xfc\xfa\x05\x49\xf9\x0b\x49\x91\x62\x1b\x83\xf4\xbc\x47\x3e\xce\xbc\x21\x65\x64\x8f\x05\xfc\xfc\xf9\x4d\xfc\x40\xda\x21\xaf\x66\xe2\xfb\xdf\x3b\xb1\x7d\xda\x3e\xc1\x0d\xf8\x28\xd8\x1a\x5e\xed\xe8\xa0\xb7\x15\x76\x49\xed\x64\x8f\x7b\xeb\x9e\x8b\x04\x20\xb2\xff\x41\x43\xd6\x7d\xef\xec\x1e\x6e\xe0\x14\x87\xda\x3a\xe0\x16\x27\x1e\xc0\x0b\x3a\xd2\xd6\x14\x30\x4f\xe7\x8b\x74\x76\x85\x9d\x62\xa0\xac\x61\x27\xb5\xe1\xe4\x02\xed\xa1\x47\x80\x36\xb5\x75\xbd\xe4\x38\x06\xc2\x5e\x1a\xd6\xea\x14\x8f\xd1\xc4\xaf\x23\xb5\x41\x57\xc0\x0d\x9c\x26\x04\x23\x61\x05\x6c\x61\x40\xe7\x91\x51\x1b\xe0\x8b\xec\xc6\xb0\x66\x02\x20\xfb\x6a\x9d\xfb\xc3\x01\x34\xc3\x58\x80\x93\x7a\x70\xf6\x7f\x54\x9c\x29\xe9\xfa\xee\x9e\xc3\x71\xeb\xce\xee\x8b\x80\xbd\x57\xc3\x18\xe0\xea\x73\xf0\x26\xc0\x87\x41\xad\xf3\x0e\x8b\xcf\x31\x27\xf4\xc4\xfd\x84\xb2\x4b\x42\x85\xa4\x9c\x1e\x38\xa4\xf3\x8f\x04\x2e\x0b\xf6\x54\x7a\x3e\x7c\x43\x46\x15\x92\x1a\x32\x72\x07\xfb\x56\xab\x16\x34\x41\x28\x07\x56\x60\x4d\x28\x66\x30\xc6\x97\xad\xed\x7b\x6b\x26\x32\xf9\x42\x6c\xad\x61\x3c\xf0\x57\xa8\x24\x4b\x42\x4e\x13\x80\x7f\x09\x81\xa8\x12\x0e\xc9\x04\x67\xbd\xcc\x45\x3d\x18\x41\xad\x74\x58\x89\xd2\x1e\xc4\xe0\xb0\xd2\x8a\xad\x13\xeb\x7c\x76\x58\xe7\x33\xa1\xac\xb2\xf3\x5c\xd0\xab\x51\x62\x31\x9b\x6f\xc4\xec\x41\xcc\x96\x50\x3b\xdb\x5f\xea\xae\xae\x05\xc3\x9b\xb5\x69\xe2\xb0\x46\x87\x46\x21\xf9\xb2\x9f\x67\xa1\xe2\x72\xf0\x06\xc8\x60\x8f\x25\x69\x46\x3f\x44\x56\x69\x0a\x31\x3d\xa5\x36\xcd\x95\x5d\xef\xa1\x65\x1e\xa8\xc8\xb2\x46\x73\x3b\x96\xa9\xb2\x7d\x76\xce\x70\x16\x70\x94\x95\x9d\x2d\xb3\x5e\x12\xa3\xcb\x1c\x12\x4a\xa7\xda\xcc\x86\xc4\x88\x93\xc8\xac\x59\x56\x56\x65\xa7\xb9\x08\x64\xe1\x45\xf7\x55\xd2\x69\x85\x86\xb0\x80\x3f\x07\xa9\x5a\x84\xbf\xe2\xfc\x0e\xfe\x9b\x4c\x1d\xbb\x65\x82\xf9\x7e\x3c\xeb\xd4\x66\x18\x39\x1c\x37\xe6\x21\xce\x83\x7c\x7e\x1d\xb0\x00\xdd\xcb\x06\x7d\xaf\x69\x47\x1c\xc3\x1e\x2a\x3b\xcd\xaf\xc1\x4a\x57\xee\xf0\x0b\x47\xcc\x91\x77\x11\x3e\xee\x7c\xb1\x54\x58\x61\x90\xbe\x8f\x19\x1d\x45\x37\x03\x60\x87\x3d\x1a\x16\x51\xc2\xa8\x0d\x6f\xa6\x48\x60\x89\x4e\xbe\xfa\xd6\xbc\x0d\x9b\x88\x98\xd4\xdb\xc4\x8e\x3c\x8c\xec\xd7\x88\xbc\xd2\x8e\xa6\xd2\xa6\x29\xed\x21\xf9\x40\x67\x84\x9f\x50\x50\xda\x03\xdc\x80\xfc\x48\xf1\x04\x3d\x09\x4d\xde\x8b\xbe\x96\x5c\x77\x56\xf2\x72\x11\x22\xa5\x3d\x20\x9d\x24\x9f\x6b\x18\xfe\xbf\x8d\x19\x70\xb6\x94\xa5\xee\x34\xeb\x0f\xa1\xa4\xac\x3b\x62\x55\x27\x89\x3e\x44\x4d\x91\x08\xab\x51\xf2\xe8\x90\xc4\xe8\xba\xe2\x64\x45\x5a\xa6\xb2\x97\x6f\xd6\xc8\x3d\x05\x43\x12\x5b\x87\x69\x68\xff\xd4\xba\xe6\xe8\xca\xf7\x3e\xf5\x8d\xd8\xdb\x52\x77\x68\x90\x7d\x27\xfa\x46\xf3\x1d\xf6\x20\xe6\x73\x31\x7f\xc8\x3a\x59\x62\x47\x29\x1f\xf8\x7a\x7f\xd5\xa2\x7a\xa6\xb1\x2f\x20\xcf\xe7\x1b\xb5\x59\x55\xb3\x39\xae\xd5\x66\x51\xd7\xeb\x4d\xfe\x58\x6e\x16\xcb\xc7\x87\xd5\x63\xbe\xdc\x24\x61\x2b\xef\x45\x1a\x50\xe9\x5a\x23\x4d\xae\x6c\x9c\x1c\x5a\x90\xa6\x82\x3d\xea\xa6\x65\x02\xb2\xa3\x53\xe8\x8d\x5a\x4a\xc2\x70\xc8\x04\x22\x4e\x0c\x92\xdb\xdf\x75\xe4\xdf\x70\xf7\x64\xb5\xb3\x6f\x68\x84\x36\xd3\x7d\x22\x82\xcc\x74\x28\x13\x00\x4d\xc2\x77\xbc\x7e\x99\x6e\xf2\x5a\x76\xe4\xdb\x46\xd7\x40\xc8\x77\xde\x7d\xf1\xe2\x3c\x1e\xd3\xdf\xa9\x12\xfc\x80\x2d\x48\x03\x13\x3b\x90\x6f\x02\xf2\x9c\x84\xcb\x8c\xc5\x3f\xc2\x72\x15\x1a\xcb\xe8\xc7\x13\xab\xd6\x1d\x86\xb7\x98\x8e\x86\x7f\x9f\xf0\xbd\xe6\x56\x47\x29\xe7\x2d\xe3\x56\xe7\x0a\x6f\xca\x35\x56\x58\xce\xf3\xe5\x6a\xbd\xae\x37\xcb\x19\x2e\x57\x0f\xeb\x55\xbe\xdc\x94\xf9\x6a\x51\xd7\x89\x64\x76\xba\x1c\x39\xde\xb0\x78\x60\x27\xa7\x12\x9f\x23\x09\xc0\xb3\x36\x55\x01\xdb\xdd\x6e\x3a\x92\x9f\x7b\x69\x06\x47\x27\x3b\x30\xc8\xe1\xd5\xff\xb2\xdd\xed\xee\xe0\x87\xff\x49\xd3\xf4\xab\x6f\x7c\xff\xda\x68\xd3\x88\xe9\x19\x29\x60\xfa\x12\x99\xe6\xa7\x07\x3c\x7c\x5c\x4c\xe0\x04\xa0\x97\x46\xd7\x48\x2c\xe4\xc8\xad\x75\x05\x6c\x5b\x34\x4d\xf2\x2b\x00\x00\xff\xff\x55\x76\x41\xb6\xde\x08\x00\x00"

func ssd_resnet50_fpn_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_ssd_resnet50_fpn_cocoYml,
		"SSD_ResNet50_FPN_COCO.yml",
	)
}

func ssd_resnet50_fpn_cocoYml() (*asset, error) {
	bytes, err := ssd_resnet50_fpn_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SSD_ResNet50_FPN_COCO.yml", size: 2270, mode: os.FileMode(420), modTime: time.Unix(1553626255, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ssd_mobilenet_v1_cocoYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xe4\x36\x0f\xbe\xfb\x57\x10\xc8\x61\x77\x81\xc4\x9e\xaf\x4d\x3c\x3e\xbc\xc0\x8b\x59\xf4\xd4\x26\x40\xb7\xed\x55\xa0\x65\xda\x56\x63\x4b\x86\x44\x67\x26\xf9\xf5\x85\x3e\xe6\x0b\x49\x81\x5c\x7a\x19\x48\xc3\x87\xd2\x43\xf2\x21\x65\x8d\x23\x55\xf0\xf3\xe7\x0f\xf1\x9b\xa9\xd5\x40\x8f\xc4\xe2\x65\x29\x76\x4f\xbb\x27\xb8\x01\x6f\x05\xd3\xc2\xab\x99\x2d\x8c\xa6\xa1\x21\x6b\x2d\x8e\xb4\x37\xf6\xb9\xca\x00\xa2\xf7\x1f\xa4\x9d\xb1\xbf\x0c\x66\x0f\x37\x70\xb2\x43\x6b\x2c\x70\x4f\xc9\x0f\xe0\x85\xac\x53\x46\x57\xb0\xcc\x97\xab\x7c\x71\x85\x4d\x36\x90\x46\xb3\x45\xa5\x39\xbb\x40\x7b\xe8\x11\xa0\x74\x6b\xec\x88\x1c\xd7\xe0\x68\x44\xcd\x4a\x9e\xec\xd1\x9a\xf9\x73\x50\x69\xb2\x15\xdc\xc0\x69\xe3\x60\x76\xd4\x00\x1b\x98\xc8\x7a\x64\xe4\x06\xf4\x82\xc3\x1c\xce\xcc\x00\x70\x6c\xee\x37\x3e\x38\x80\x6e\x9a\x2b\xb0\xa8\x26\x6b\xfe\x26\xc9\x85\x44\x3b\x0e\x77\x1c\xc2\x6d\x07\xb3\xaf\x02\xf6\x4e\x4e\x73\x80\xcb\xcf\xc1\xbb\x00\x9f\x26\x79\xbf\x19\xa8\xfa\x9c\x67\x42\x27\xdf\x4f\x30\xbb\x74\x68\xc8\x49\xab\x26\x0e\xe9\xfc\x5f\x06\x97\x05\x7b\xaa\xbd\x3f\xfc\x20\x26\x19\x92\x1a\x32\x72\x0b\xfb\x5e\xc9\x1e\x94\x83\x50\x0e\x6a\xc0\xe8\x50\xcc\x20\x8c\xaf\x3b\x33\x8e\x46\x27\x67\xe7\x0b\xb1\x33\x9a\xe9\xc0\xdf\xa0\x41\x46\x47\x9c\x67\x00\x7f\x3a\x02\xe7\x1a\x31\x06\x65\xe9\xa8\x2c\x69\xa4\x11\xab\xc5\xb2\x14\x8b\xa5\x58\x95\xd0\x5a\x33\x5e\x12\x6a\xae\x99\xc0\x9b\x31\x79\x66\xa9\x25\x4b\x5a\x92\xf3\xf5\x3c\xef\x42\x29\x71\xf2\x95\x2d\x60\x4f\xb5\x53\x4c\x7e\x49\x2c\xf3\x1c\x62\xdc\xb5\xd2\xdd\x95\x0e\xef\xa0\x67\x9e\x5c\x55\x14\x9d\xe2\x7e\xae\x73\x69\xc6\xe2\x9c\xba\x22\xe0\x5c\x51\x0f\xa6\x2e\x46\x74\x4c\xb6\xb0\xe4\x08\xad\xec\x0b\x13\x22\x16\x27\x92\x45\xb7\x6e\x8c\x2c\x4e\x7b\x11\x9c\x85\x27\x3d\x36\xd9\xa0\x24\x69\x47\x15\xfc\x7f\x42\xd9\x13\xfc\x1a\xf7\xb7\xf0\x57\x52\x6b\x6c\x83\x04\xf3\x8d\x76\xe6\xa9\xf4\x34\x73\x08\x37\xe6\x21\xee\x03\x7d\x7e\x9d\xa8\x02\x35\x62\x47\xbe\x89\x94\x75\x1c\xcd\x1e\x8a\x83\xe2\xd7\xa0\x91\xab\xb2\xfb\x83\x23\xe6\xe8\x77\x61\x3e\xde\x7c\x71\x54\x38\x61\x42\xdf\xa0\x4c\xd6\x45\x99\x02\xd0\x40\x23\x69\x16\x91\xc2\xac\x34\x97\xc9\x12\xbc\xc4\x80\xaf\xbe\xe7\xbe\x84\x4b\x44\x4c\xea\x97\xcc\xcc\x3c\xcd\xec\xcf\x88\x7e\xb5\x99\x75\xa3\x74\x57\x9b\x43\xf6\x01\xcf\x08\x3f\xa1\xa0\x36\x07\xb8\x01\xfc\x88\x71\x82\x9e\x88\x66\xef\x49\x5f\x53\x6e\x07\x83\xbc\x5e\x05\x4b\x6d\x0e\xe4\x4e\x94\xcf\x35\x0c\xff\x7f\x89\x19\xb0\xa6\xc6\x5a\x0d\x8a\xd5\x87\x50\x27\x8d\x3d\x62\xe5\x80\xce\x7d\x88\x4a\x96\x08\x6b\x09\x79\xb6\xe4\xc4\x6c\x87\xea\x24\x45\xb7\xce\x71\xc4\x37\xa3\x71\xef\x82\x20\x1d\x1b\x4b\x79\xe8\xeb\xdc\xd8\xee\xa8\xca\xf7\x3a\xfd\xd7\x0e\x7b\x10\xcb\xa5\x58\x3e\x14\x03\xd6\x34\xb8\x9c\x0f\x7c\x7d\xbf\xec\x49\x3e\xbb\x79\xac\x60\xb3\x59\x96\xb2\xfc\xde\x2c\x96\x74\x2f\xcb\x55\xdb\xde\x97\x9b\x6d\x5d\xae\xd6\xdb\x87\xef\xdb\xcd\xba\xcc\xc2\x55\x5e\x8b\x6e\x22\xa9\x5a\x45\x2e\xa9\xb2\xb3\x38\xf5\x80\xba\x81\x3d\xa9\xae\x67\x07\xce\xcc\x56\x92\x17\x6a\x8d\x8e\x42\x90\x19\x44\x9c\x98\x90\xfb\xff\x34\xe4\x34\x54\x8a\xd6\x9a\x37\xd2\x42\xe9\x34\x28\x44\xb8\x3f\x9f\xea\x0c\x40\x39\xe1\x5b\x59\xbd\xa4\xd9\xdb\xe2\xe0\x7c\x3f\xa8\x16\x1c\xf1\xad\x97\x55\x1c\x75\x47\xfe\x7e\x0a\x22\xf8\x05\x1b\x40\x0d\xc9\x3b\x38\xdf\x04\xe4\x39\xba\xcb\x54\xc4\x3f\xc2\x71\x0d\x69\xc3\xe4\xd7\xc9\xab\x55\x03\x85\xd7\xd3\x1d\x95\xfc\x3e\x93\x7b\xc5\xbd\x8a\x54\xce\x57\xc6\xab\xce\xa5\x93\xdb\xa6\xdd\x2e\x4a\x7c\x78\xd8\x2e\xee\x57\x92\x16\x0b\xac\xa9\x6c\xb7\x25\x6d\x70\x4d\xf5\x32\x43\x66\xab\xea\x99\xe3\xe8\xa4\x03\x5b\x4c\xb5\x3b\x5b\x32\x80\x67\xa5\x9b\x0a\x76\x8f\x8f\x29\x24\xbf\xf7\xd4\x34\xcd\x16\x07\xd0\xc4\xe1\x9d\xfe\xba\x7b\x7c\xbc\x85\xdf\xfd\x4f\x9e\xe7\xdf\x7c\x47\xfb\xf7\x41\xe9\x4e\xa4\xc1\x5f\x41\xfa\x76\x48\xfb\xd3\x93\x1b\x3e\x07\x12\x38\x03\x18\x51\xab\x96\x1c\x0b\x9c\xb9\x37\xb6\x82\x5d\x4f\xba\xcb\xfe\x09\x00\x00\xff\xff\x85\x13\x4d\x26\x90\x08\x00\x00"

func ssd_mobilenet_v1_cocoYmlBytes() ([]byte, error) {
	return bindataRead(
		_ssd_mobilenet_v1_cocoYml,
		"ssd_mobilenet_v1_coco.yml",
	)
}

func ssd_mobilenet_v1_cocoYml() (*asset, error) {
	bytes, err := ssd_mobilenet_v1_cocoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ssd_mobilenet_v1_coco.yml", size: 2192, mode: os.FileMode(420), modTime: time.Unix(1553626255, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC_AlexNet_Caffe.yml": bvlc_alexnet_caffeYml,
	"DeepLabv3_MobileNetv2_PASCAL_VOC.yml": deeplabv3_mobilenetv2_pascal_vocYml,
	"Faster_RCNN_ResNet50_COCO.yml": faster_rcnn_resnet50_cocoYml,
	"Mask_RCNN_Inception_v2_COCO.yml": mask_rcnn_inception_v2_cocoYml,
	"SRGAN.yml": srganYml,
	"SSD_MobileNet_v2_COCO.yml": ssd_mobilenet_v2_cocoYml,
	"SSD_MobileNet_v2_Quantized_300x300_COCO.yml": ssd_mobilenet_v2_quantized_300x300_cocoYml,
	"SSD_ResNet50_FPN_COCO.yml": ssd_resnet50_fpn_cocoYml,
	"ssd_mobilenet_v1_coco.yml": ssd_mobilenet_v1_cocoYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC_AlexNet_Caffe.yml": &bintree{bvlc_alexnet_caffeYml, map[string]*bintree{}},
	"DeepLabv3_MobileNetv2_PASCAL_VOC.yml": &bintree{deeplabv3_mobilenetv2_pascal_vocYml, map[string]*bintree{}},
	"Faster_RCNN_ResNet50_COCO.yml": &bintree{faster_rcnn_resnet50_cocoYml, map[string]*bintree{}},
	"Mask_RCNN_Inception_v2_COCO.yml": &bintree{mask_rcnn_inception_v2_cocoYml, map[string]*bintree{}},
	"SRGAN.yml": &bintree{srganYml, map[string]*bintree{}},
	"SSD_MobileNet_v2_COCO.yml": &bintree{ssd_mobilenet_v2_cocoYml, map[string]*bintree{}},
	"SSD_MobileNet_v2_Quantized_300x300_COCO.yml": &bintree{ssd_mobilenet_v2_quantized_300x300_cocoYml, map[string]*bintree{}},
	"SSD_ResNet50_FPN_COCO.yml": &bintree{ssd_resnet50_fpn_cocoYml, map[string]*bintree{}},
	"ssd_mobilenet_v1_coco.yml": &bintree{ssd_mobilenet_v1_cocoYml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

