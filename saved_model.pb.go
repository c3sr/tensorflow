// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: saved_model.proto

package tensorflow

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// SavedModel is the high level serialization format for TensorFlow Models.
// See [todo: doc links, similar to session_bundle] for more information.
type SavedModel struct {
	// The schema version of the SavedModel instance. Used for versioning when
	// making future changes to the specification/implementation. Initial value
	// at release will be 1.
	SavedModelSchemaVersion int64 `protobuf:"varint,1,opt,name=saved_model_schema_version,json=savedModelSchemaVersion,proto3" json:"saved_model_schema_version,omitempty"`
	// One or more MetaGraphs.
	MetaGraphs []*MetaGraphDef `protobuf:"bytes,2,rep,name=meta_graphs,json=metaGraphs" json:"meta_graphs,omitempty"`
}

func (m *SavedModel) Reset()                    { *m = SavedModel{} }
func (m *SavedModel) String() string            { return proto.CompactTextString(m) }
func (*SavedModel) ProtoMessage()               {}
func (*SavedModel) Descriptor() ([]byte, []int) { return fileDescriptorSavedModel, []int{0} }

func (m *SavedModel) GetSavedModelSchemaVersion() int64 {
	if m != nil {
		return m.SavedModelSchemaVersion
	}
	return 0
}

func (m *SavedModel) GetMetaGraphs() []*MetaGraphDef {
	if m != nil {
		return m.MetaGraphs
	}
	return nil
}

func init() {
	proto.RegisterType((*SavedModel)(nil), "tensorflow.SavedModel")
}
func (m *SavedModel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SavedModel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SavedModelSchemaVersion != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSavedModel(dAtA, i, uint64(m.SavedModelSchemaVersion))
	}
	if len(m.MetaGraphs) > 0 {
		for _, msg := range m.MetaGraphs {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSavedModel(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func encodeVarintSavedModel(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SavedModel) Size() (n int) {
	var l int
	_ = l
	if m.SavedModelSchemaVersion != 0 {
		n += 1 + sovSavedModel(uint64(m.SavedModelSchemaVersion))
	}
	if len(m.MetaGraphs) > 0 {
		for _, e := range m.MetaGraphs {
			l = e.Size()
			n += 1 + l + sovSavedModel(uint64(l))
		}
	}
	return n
}

func sovSavedModel(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozSavedModel(x uint64) (n int) {
	return sovSavedModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SavedModel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSavedModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SavedModel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SavedModel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SavedModelSchemaVersion", wireType)
			}
			m.SavedModelSchemaVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSavedModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SavedModelSchemaVersion |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaGraphs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSavedModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSavedModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaGraphs = append(m.MetaGraphs, &MetaGraphDef{})
			if err := m.MetaGraphs[len(m.MetaGraphs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSavedModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSavedModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSavedModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSavedModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSavedModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSavedModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthSavedModel
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowSavedModel
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipSavedModel(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthSavedModel = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSavedModel   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("saved_model.proto", fileDescriptorSavedModel) }

var fileDescriptorSavedModel = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x4e, 0x2c, 0x4b,
	0x4d, 0x89, 0xcf, 0xcd, 0x4f, 0x49, 0xcd, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2a,
	0x49, 0xcd, 0x2b, 0xce, 0x2f, 0x4a, 0xcb, 0xc9, 0x2f, 0x97, 0x12, 0xc8, 0x4d, 0x2d, 0x49, 0x8c,
	0x4f, 0x2f, 0x4a, 0x2c, 0xc8, 0x80, 0xc8, 0x2a, 0xb5, 0x30, 0x72, 0x71, 0x05, 0x83, 0xf4, 0xf8,
	0x82, 0xb4, 0x08, 0x59, 0x73, 0x49, 0x21, 0x99, 0x10, 0x5f, 0x9c, 0x9c, 0x91, 0x9a, 0x9b, 0x18,
	0x5f, 0x96, 0x5a, 0x54, 0x9c, 0x99, 0x9f, 0x27, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x1c, 0x24, 0x5e,
	0x0c, 0x57, 0x1f, 0x0c, 0x96, 0x0f, 0x83, 0x48, 0x0b, 0x59, 0x72, 0x71, 0x23, 0xcc, 0x2f, 0x96,
	0x60, 0x52, 0x60, 0xd6, 0xe0, 0x36, 0x92, 0xd0, 0x43, 0xd8, 0xaf, 0xe7, 0x9b, 0x5a, 0x92, 0xe8,
	0x0e, 0x92, 0x75, 0x49, 0x4d, 0x0b, 0xe2, 0xca, 0x85, 0xf1, 0x8a, 0x9d, 0x1c, 0x4f, 0x3c, 0x92,
	0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0xb8, 0x24,
	0xf2, 0x8b, 0xd2, 0x91, 0xb5, 0xa6, 0x15, 0x25, 0xe6, 0xa6, 0x96, 0xe7, 0x17, 0x65, 0x3b, 0x09,
	0x20, 0xdc, 0x1b, 0x00, 0xf2, 0x43, 0x71, 0x00, 0xe3, 0x0f, 0x46, 0xc6, 0x24, 0x36, 0xb0, 0x87,
	0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x8d, 0xb2, 0xc1, 0x03, 0x01, 0x00, 0x00,
}
