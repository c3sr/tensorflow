// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow_server.proto

package tensorflow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Defines the configuration of a single TensorFlow server.
type ServerDef struct {
	// The cluster of which this server is a member.
	Cluster *ClusterDef `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// The name of the job of which this server is a member.
	//
	// NOTE(mrry): The `cluster` field must contain a `JobDef` with a `name` field
	// that matches this name.
	JobName string `protobuf:"bytes,2,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	// The task index of this server in its job.
	//
	// NOTE: The `cluster` field must contain a `JobDef` with a matching `name`
	// and a mapping in its `tasks` field for this index.
	TaskIndex int32 `protobuf:"varint,3,opt,name=task_index,json=taskIndex,proto3" json:"task_index,omitempty"`
	// The default configuration for sessions that run on this server.
	DefaultSessionConfig *ConfigProto `protobuf:"bytes,4,opt,name=default_session_config,json=defaultSessionConfig,proto3" json:"default_session_config,omitempty"`
	// The protocol to be used by this server.
	//
	// Acceptable values include: "grpc", "grpc+verbs".
	Protocol             string   `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerDef) Reset()         { *m = ServerDef{} }
func (m *ServerDef) String() string { return proto.CompactTextString(m) }
func (*ServerDef) ProtoMessage()    {}
func (*ServerDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6a2f4954b846a23, []int{0}
}

func (m *ServerDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerDef.Unmarshal(m, b)
}
func (m *ServerDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerDef.Marshal(b, m, deterministic)
}
func (m *ServerDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerDef.Merge(m, src)
}
func (m *ServerDef) XXX_Size() int {
	return xxx_messageInfo_ServerDef.Size(m)
}
func (m *ServerDef) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerDef.DiscardUnknown(m)
}

var xxx_messageInfo_ServerDef proto.InternalMessageInfo

func (m *ServerDef) GetCluster() *ClusterDef {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *ServerDef) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *ServerDef) GetTaskIndex() int32 {
	if m != nil {
		return m.TaskIndex
	}
	return 0
}

func (m *ServerDef) GetDefaultSessionConfig() *ConfigProto {
	if m != nil {
		return m.DefaultSessionConfig
	}
	return nil
}

func (m *ServerDef) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func init() {
	proto.RegisterType((*ServerDef)(nil), "tensorflow.ServerDef")
}

func init() { proto.RegisterFile("tensorflow_server.proto", fileDescriptor_c6a2f4954b846a23) }

var fileDescriptor_c6a2f4954b846a23 = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x65, 0xa0, 0xb4, 0x31, 0x65, 0xb1, 0x50, 0x1b, 0x22, 0x21, 0x05, 0xa6, 0x2c, 0xa4,
	0x08, 0xbe, 0x41, 0xe9, 0xc2, 0x00, 0xaa, 0xd2, 0x8d, 0x25, 0xca, 0x9f, 0x73, 0x70, 0x48, 0x7c,
	0x95, 0xed, 0x00, 0x9f, 0x97, 0x4f, 0xc1, 0x88, 0x62, 0xb7, 0x84, 0x8e, 0x77, 0xbf, 0x7b, 0xef,
	0xde, 0xa3, 0x73, 0x03, 0x52, 0xa3, 0xe2, 0x0d, 0x7e, 0xa6, 0x1a, 0xd4, 0x07, 0xa8, 0x78, 0xab,
	0xd0, 0x20, 0xa3, 0x03, 0x08, 0xa6, 0x05, 0x4a, 0x2e, 0x2a, 0x47, 0x82, 0xf3, 0xa2, 0xe9, 0xb4,
	0xd9, 0x1f, 0xde, 0x7c, 0x13, 0xea, 0x6d, 0xac, 0x72, 0x05, 0x9c, 0xdd, 0xd1, 0xf1, 0x0e, 0xfb,
	0x24, 0x24, 0xd1, 0xd9, 0xfd, 0x2c, 0x1e, 0x8c, 0xe2, 0x47, 0x87, 0x56, 0xc0, 0x93, 0xfd, 0x19,
	0xbb, 0xa4, 0x93, 0x1a, 0xf3, 0x54, 0x66, 0x2d, 0xf8, 0x47, 0x21, 0x89, 0xbc, 0x64, 0x5c, 0x63,
	0xfe, 0x92, 0xb5, 0xc0, 0xae, 0x28, 0x35, 0x99, 0x7e, 0x4f, 0x85, 0x2c, 0xe1, 0xcb, 0x3f, 0x0e,
	0x49, 0x34, 0x4a, 0xbc, 0x7e, 0xf3, 0xd4, 0x2f, 0xd8, 0x33, 0x9d, 0x95, 0xc0, 0xb3, 0xae, 0x31,
	0xa9, 0x06, 0xad, 0x05, 0xca, 0xd4, 0x05, 0xf5, 0x4f, 0xec, 0xeb, 0xf9, 0xc1, 0x6b, 0x4b, 0xd6,
	0x7d, 0xe4, 0xe4, 0x62, 0x27, 0xdb, 0x38, 0x95, 0x43, 0x2c, 0xa0, 0x13, 0xdb, 0xa8, 0xc0, 0xc6,
	0x1f, 0xd9, 0x20, 0x7f, 0xf3, 0x32, 0xa1, 0x01, 0xaa, 0xea, 0xbf, 0x5f, 0x29, 0xb4, 0x51, 0x9d,
	0x34, 0xa2, 0x85, 0xe5, 0xd4, 0xf5, 0xb7, 0xe6, 0x7a, 0x4d, 0x5e, 0xaf, 0x2b, 0x61, 0xde, 0xba,
	0x3c, 0x2e, 0xb0, 0x5d, 0xa8, 0x4c, 0xdc, 0x6e, 0x15, 0xd6, 0x50, 0x98, 0xc5, 0x20, 0xff, 0x21,
	0x24, 0x3f, 0xb5, 0xee, 0x0f, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x67, 0xd7, 0x59, 0x83,
	0x01, 0x00, 0x00,
}
