FROM carml/base:amd64-cpu-latest
MAINTAINER Abdul Dakkak <dakkak@illinois.edu>

# Build-time metadata as defined at http://label-schema.org
ARG BUILD_DATE
ARG VCS_REF
ARG VCS_URL
ARG VERSION
ARG ARCH
ARG FRAMEWORK_VERSION
LABEL org.carml.tensorflow.build-date=$BUILD_DATE \
  org.carml.tensorflow.name="tensorflow agent" \
  org.carml.tensorflow.description="" \
  org.carml.tensorflow.url="https://www.carml.org/" \
  org.carml.tensorflow.vcs-ref=$VCS_REF \
  org.carml.tensorflow.vcs-url=$VCS_URL \
  org.carml.tensorflow.vendor="MLModelScope" \
  org.carml.tensorflow.arch=$ARCH \
  org.carml.tensorflow.version=$VERSION \
  org.carml.tensorflow.framework_version=$FRAMEWORK_VERSION \
  org.carml.tensorflow.schema-version="1.0"

########## INSTALLATION STEPS ###################

RUN add-apt-repository ppa:webupd8team/java &&\
  apt-get update -y && apt-get install -y --no-install-recommends \
    openjdk-8-jdk \
    wget \
    curl \
    unzip \
    zip \
    git \
    rsync \
    python-dev \
    swig \
    python-pip \
    libcurl3-dev \
    libfreetype6-dev \
    libzmq3-dev \
    libhdf5-dev \
		libc-ares-dev \
		gpg-agent && \
  rm -rf /var/lib/apt/lists/*

# Install bazel
ENV BAZEL_VERSION 0.24.1
RUN apt-get update && \
	apt-get install -y --no-install-recommends \
   bash-completion \
   g++ \
   zlib1g-dev && \
	curl -LO "https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb" && \
	dpkg -i bazel_*.deb && \
	bazel version

# install pre-requisites
RUN pip install -U setuptools && \
  pip --no-cache-dir install \
  six \
  numpy \
  wheel

# get rai-project/tensorflow repository
ENV PKG github.com/yhchang3/tensorflow
WORKDIR $GOPATH/src/$PKG

RUN git clone --depth=1 --branch=master https://${PKG}.git . && \
  cd $GOPATH/src/$PKG && \
  dep ensure -vendor-only -v

RUN cd ${GOPATH}/src/$PKG/vendor/github.com/tensorflow/tensorflow && \
  export GCC_HOST_COMPILER_PATH=/usr/bin/gcc && \
  export PYTHON_BIN_PATH=/usr/bin/python3.6 && \
  export PYTHON_LIB_PATH=/usr/lib/python3.6/dist-packages && \
  export TF_NEED_GCP=1 && \
  export TF_NEED_HDFS=1 && \
  export TF_NEED_JEMALLOC=1 && \
  export TF_ENABLE_XLA=1 && \
  export TF_NEED_OPENCL=0 && \
  export TF_NEED_CUDA=0 && \
  export TF_NEED_MKL=0 && \
  export TF_NEED_VERBS=0 && \
  export TF_NEED_MPI=0 && \
  ./configure && \
  bazel build --jobs 4 -c opt --local_resources 20000,1,0.25 //tensorflow:libtensorflow.so

RUN	export LD_LIBRARY_PATH=${GOPATH}/src/$PKG/vendor/github.com/tensorflow/tensorflow/bazel-bin/tensorflow:${LD_LIBRARY_PATH} && \
	ls -la ${GOPATH}/src/$PKG/vendor/github.com/tensorflow/tensorflow/bazel-bin/tensorflow && \
	cp ${GOPATH}/src/$PKG/vendor/github.com/tensorflow/tensorflow/bazel-bin/tensorflow/libtensorflow.so.1.14.0 /usr/local/lib/libtensorflow.so && \
	cp ${GOPATH}/src/$PKG/vendor/github.com/tensorflow/tensorflow/bazel-bin/tensorflow/libtensorflow_framework.so.1.14.0 /usr/local/lib/libtensorflow_framework.so

ENV LD_LIBRARY_PATH=${GOPATH}/src/$PKG/vendor/github.com/tensorflow/tensorflow/bazel-bin/tensorflow:${LD_LIBRARY_PATH}

RUN cd $GOPATH/src/$PKG && \
  go build -a -installsuffix cgo -ldflags "-s -w -X ${PKG}/Version=${VERSION} -X ${PKG}/GitCommit=${VCS_REF} -X ${PKG}/BuildDate=${BUILD_DATE}"&& \
  cd tensorflow-agent && \
  go install -tags=nogpu && \
  cd .. && \
  rm -fr vendor

ENTRYPOINT ["tensorflow-agent"]
